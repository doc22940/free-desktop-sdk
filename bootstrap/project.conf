name: base-sdk-bootstrap

aliases:
  flathub: https://flathub.org/

element-path: elements

variables:
  libdir: "%{prefix}/%{lib}/%{triple}"
  sysroot: /cross-installation
  cross-install: make -j1 install DESTDIR="%{install-root}%{sysroot}"
  cross-debugdir: "%{sysroot}%{libdir}/debug"
  tools-debugdir: "%{tools}/lib/debug"
  tools: /cross
  (?):
  - target_arch == "arm":
      triple: "%{target_arch}-unknown-linux-gnueabi"
  - target_arch != "arm":
      triple: "%{target_arch}-unknown-linux-gnu"


  strip-binaries: |
    find "%{install-root}" -type f \
      '(' -perm -111 -o -name '*.so*' \
          -o -name '*.cmxs' -o -name '*.node' ')' \
      -exec sh -ec \
      'read -n4 hdr <"$1" # check for elf header
       if [ "$hdr" != "$(printf \\x7fELF)" ]; then
           exit 0
       fi
       case "$1" in
         "%{install-root}%{debugdir}/"*)
           exit 0
           ;;
         "%{install-root}/cross-installation%{debugdir}/"*)
           exit 0
           ;;
         "%{install-root}/cross-installation/"*)
           debugfilelink=%{debugdir}/$(realpath -s --relative-to="%{install-root}/cross-installation" "$1")"
           debugfile="%{install-root}/cross-installation${debugfilelink}"
           toolchain=%{triple}-
           ;;
         *)
           debugfilelink="%{debugdir}/$(realpath -s --relative-to="%{install-root}" "$1")"
           debugfile="%{install-root}${debugfilelink}"
           ;;
       esac
       mkdir -p "$(dirname "$debugfile")"
       "${toolchain}objcopy" %{objcopy-extract-args} "$1" "$debugfile"
       chmod 644 "$debugfile"
       "${toolchain}strip" %{strip-args} "$1"
       "${toolchain}objcopy" %{objcopy-link-args} "$debugfilelink" "$1"' - {} ';'

environment:
  FORCE_UNSAFE_CONFIGURE: "1"
  PATH: "%{tools}/bin:/bin"

plugins:
  elements:
    - plugins/elements

options:
  target_arch:
    type: arch
    description: Target architecture
    variable: target_arch
    values:
      - arm
      - aarch64
      - i586
      - x86_64

  build_arch:
    type: arch
    description: Build architecture
    variable: build_arch
    values:
      - arm
      - aarch64
      - i586
      - x86_64

