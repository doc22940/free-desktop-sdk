diff -ur llvm.old/llvm/cmake/modules/AddLLVM.cmake llvm/llvm/cmake/modules/AddLLVM.cmake
--- llvm.old/llvm/cmake/modules/AddLLVM.cmake	2019-08-30 13:48:16.053163686 +0200
+++ llvm/llvm/cmake/modules/AddLLVM.cmake	2019-08-30 14:59:19.590308284 +0200
@@ -565,6 +565,8 @@
        ${LLVM_LINK_COMPONENTS}
        )
     endif()
+  elseif (${name} STREQUAL "LLVMTableGenShared" AND LLVM_BUILD_LLVM_DYLIB)
+    target_link_libraries(${name} PRIVATE LLVM)
   else()
     # Components have not been defined explicitly in CMake, so add the
     # dependency information for this library as defined by LLVMBuild.
@@ -691,8 +693,10 @@
       if(${name} IN_LIST LLVM_DISTRIBUTION_COMPONENTS OR
           (in_llvm_libs AND "llvm-libraries" IN_LIST LLVM_DISTRIBUTION_COMPONENTS) OR
           NOT LLVM_DISTRIBUTION_COMPONENTS)
-        set(export_to_llvmexports EXPORT LLVMExports)
-        set_property(GLOBAL PROPERTY LLVM_HAS_EXPORTS True)
+        if(ARG_MODULE OR ARG_SHARED OR BUILD_SHARED_LIBS)
+          set(export_to_llvmexports EXPORT LLVMExports)
+          set_property(GLOBAL PROPERTY LLVM_HAS_EXPORTS True)
+        endif()
       endif()
 
       install(TARGETS ${name}
@@ -707,7 +711,10 @@
                                  COMPONENT ${name})
       endif()
     endif()
-    set_property(GLOBAL APPEND PROPERTY LLVM_EXPORTS ${name})
+    if(ARG_MODULE OR ARG_SHARED OR BUILD_SHARED_LIBS)
+      set_property(GLOBAL APPEND PROPERTY LLVM_EXPORTS ${name})
+    else()
+    endif()
   endif()
   if (ARG_MODULE)
     set_target_properties(${name} PROPERTIES FOLDER "Loadable modules")
diff -ur llvm.old/llvm/cmake/modules/AddLLVM.cmake.orig llvm/llvm/cmake/modules/AddLLVM.cmake.orig
--- llvm.old/llvm/cmake/modules/AddLLVM.cmake.orig	2019-08-30 13:48:16.053163686 +0200
+++ llvm/llvm/cmake/modules/AddLLVM.cmake.orig	2019-08-30 13:47:49.065408996 +0200
@@ -1730,7 +1730,7 @@
     set(_install_name_dir INSTALL_NAME_DIR "@rpath")
     set(_install_rpath "@loader_path/../lib" ${extra_libdir})
   elseif(UNIX)
-    set(_install_rpath "\$ORIGIN/../lib${LLVM_LIBDIR_SUFFIX}" ${extra_libdir})
+    set(_install_rpath ${extra_libdir})
     if(${CMAKE_SYSTEM_NAME} MATCHES "(FreeBSD|DragonFly)")
       set_property(TARGET ${name} APPEND_STRING PROPERTY
                    LINK_FLAGS " -Wl,-z,origin ")
diff -ur llvm.old/llvm/lib/TableGen/CMakeLists.txt llvm/llvm/lib/TableGen/CMakeLists.txt
--- llvm.old/llvm/lib/TableGen/CMakeLists.txt	2019-08-30 13:48:16.133162959 +0200
+++ llvm/llvm/lib/TableGen/CMakeLists.txt	2019-08-30 13:48:24.789084275 +0200
@@ -1,3 +1,24 @@
+if (LLVM_BUILD_LLVM_DYLIB)
+  add_llvm_library(LLVMTableGenShared
+    Error.cpp
+    JSONBackend.cpp
+    Main.cpp
+    Record.cpp
+    SetTheory.cpp
+    StringMatcher.cpp
+    TableGenBackend.cpp
+    TGLexer.cpp
+    TGParser.cpp
+
+    SHARED
+
+    ADDITIONAL_HEADER_DIRS
+    ${LLVM_MAIN_INCLUDE_DIR}/llvm/TableGen
+
+    OUTPUT_NAME LLVMTableGen
+    )
+endif()
+
 add_llvm_library(LLVMTableGen
   Error.cpp
   JSONBackend.cpp
diff -ur llvm.old/llvm/tools/llvm-config/llvm-config.cpp llvm/llvm/tools/llvm-config/llvm-config.cpp
--- llvm.old/llvm/tools/llvm-config/llvm-config.cpp	2019-08-30 13:48:16.869156269 +0200
+++ llvm/llvm/tools/llvm-config/llvm-config.cpp	2019-08-30 13:48:24.789084275 +0200
@@ -685,6 +685,13 @@
       };
 
       if (LinkMode == LinkModeShared && LinkDyLib) {
+        for (unsigned i = 0, e = RequiredLibs.size(); i != e; ++i) {
+	  if (RequiredLibs[i] == "LLVMTableGen") {
+	    PrintForLib(RequiredLibs[i]);
+	    OS << ' ';
+	    break ;
+	  }
+	}
         PrintForLib(DyLibName);
       } else {
         for (unsigned i = 0, e = RequiredLibs.size(); i != e; ++i) {
diff -ur llvm.old/llvm/utils/llvm-build/llvmbuild/main.py llvm/llvm/utils/llvm-build/llvmbuild/main.py
--- llvm.old/llvm/utils/llvm-build/llvmbuild/main.py	2019-08-30 13:48:16.917155833 +0200
+++ llvm/llvm/utils/llvm-build/llvmbuild/main.py	2019-08-30 13:51:13.407551616 +0200
@@ -359,6 +359,7 @@
         root_entries = set(e[0] for e in entries)
         for _,_,deps,_ in entries:
             root_entries -= set(deps)
+        root_entries.remove('tablegen')
         entries.append(('all', None, sorted(root_entries), True))
 
         entries.sort()
